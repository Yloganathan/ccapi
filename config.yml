database:
  # the name of your JDBC driver
  # TODO setup role and password so the system does not use super user on the database
  driverClass: org.postgresql.Driver

  # the JDBC URL. ENV variable to point to local pg or heroku pg
  url: ${JDBC_DATABASE_URL}

  # any properties specific to your JDBC driver:
  properties:
    charSet: UTF-8
    hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect

  # the maximum amount of time to wait on an empty pool before throwing an exception
  maxWaitForConnection: 1s

  # the SQL query to run when validating a connection's liveness
  validationQuery: "/* MyApplication Health Check */ SELECT 1"

  # the minimum number of connections to keep open
  minSize: 8

  # the maximum number of connections to keep open -- Heroku has a max of 20
  maxSize: 20

  # whether or not idle connections should be validated
  checkConnectionWhileIdle: false

logging:
  level: INFO
  loggers:
    com.capone.ccapi: INFO
    org.hibernate.SQL:
          level: INFO

# Logback's Time Based Rolling Policy - archivedLogFilenamePattern: /tmp/application-%d{yyyy-MM-dd}.log.gz
# Logback's Size and Time Based Rolling Policy -  archivedLogFilenamePattern: /tmp/application-%d{yyyy-MM-dd}-%i.log.gz
# Logback's Fixed Window Rolling Policy -  archivedLogFilenamePattern: /tmp/application-%i.log.gz

  appenders:
    - type: console
    - type: file
      threshold: INFO
      logFormat: "%-6level [%d{HH:mm:ss.SSS}] [%t] %logger{5} - %X{code} %msg %n"
      currentLogFilename: /tmp/application.log
      archivedLogFilenamePattern: /tmp/application-%d{yyyy-MM-dd}-%i.log.gz
      archivedFileCount: 7
      timeZone: UTC
      maxFileSize: 10MB

server:

  #  softNofileLimit: 1000
  #  hardNofileLimit: 1000
  applicationConnectors:
    - type: http
      port: 8080

  adminConnectors:
    - type: http
      port: 8081

  #turn off default exception mappers and register the needed ones with Jersey
  registerDefaultExceptionMappers: false
